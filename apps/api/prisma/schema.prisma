generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  name          String?
  email         String        @unique
  passwordHash  String?       @map("password_hash")
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")
  suitabilities Suitability[]

  @@map("users")
}

model Question {
  id                   Int                   @id @default(autoincrement())
  question             String
  alternatives         String[]
  weights              Int[]
  answers              Answer[]
  questionAlternatives QuestionAlternative[]
}

model QuestionAlternative {
  id          Int       @id @default(autoincrement())
  alternative String
  weight      Int
  Answer      Answer[]
  Question    Question? @relation(fields: [questionId], references: [id])
  questionId  Int?
}

model Answer {
  id                   Int                 @id @default(autoincrement())
  suitability          Suitability         @relation(fields: [suitabilityId], references: [id])
  suitabilityId        String              @map("suitability_id")
  question             Question            @relation(fields: [questionId], references: [id])
  questionId           Int                 @map("question_id")
  choosedAlternative   QuestionAlternative @relation(fields: [choosedAlternativeId], references: [id])
  choosedAlternativeId Int                 @map("choosed_alternative_id")
}

model Suitability {
  id        String   @id @default(uuid())
  answers   Answer[]
  createdAt DateTime @default(now()) @map("created_at")
  score     Int
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}
